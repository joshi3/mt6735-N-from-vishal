diff --git a/base/core/res/res/values/colors.xml b/base/core/res/res/values/colors.xml
index bddd225..0ff3842 100644
--- a/base/core/res/res/values/colors.xml
+++ b/base/core/res/res/values/colors.xml
@@ -149,6 +149,7 @@
 
     <color name="system_notification_accent_color">#ff607D8B</color>
     <color name="battery_saver_mode_color">#fff4511e</color><!-- deep orange 600 -->
+    <color name="battery_max_mode_color">#ff32cd32</color>
 
     <!-- Default user icon colors -->
     <color name="user_icon_1">#ff00bcd4</color><!-- teal 500 -->
diff --git a/base/core/res/res/values/symbols.xml b/base/core/res/res/values/symbols.xml
index 4951023..b1276de 100644
--- a/base/core/res/res/values/symbols.xml
+++ b/base/core/res/res/values/symbols.xml
@@ -2229,6 +2229,7 @@
   <java-symbol type="layout" name="select_dialog_multichoice_material" />
   <java-symbol type="array" name="no_ems_support_sim_operators" />
   <java-symbol type="color" name="battery_saver_mode_color" />
+  <java-symbol type="color" name="battery_max_mode_color" />
   <java-symbol type="color" name="system_notification_accent_color" />
   <java-symbol type="dimen" name="text_handle_min_size" />
   <java-symbol type="id" name="transitionTransform" />
diff --git a/base/packages/SystemUI/res/values-zh-rCN/strings.xml b/base/packages/SystemUI/res/values-zh-rCN/strings.xml
index 7613099..a95841f 100644
--- a/base/packages/SystemUI/res/values-zh-rCN/strings.xml
+++ b/base/packages/SystemUI/res/values-zh-rCN/strings.xml
@@ -640,6 +640,7 @@
     <string name="accessibility_quick_settings_settings" msgid="6132460890024942157">"打开设置。"</string>
     <string name="accessibility_quick_settings_expand" msgid="2375165227880477530">"开启快捷设置。"</string>
     <string name="accessibility_quick_settings_collapse" msgid="1792625797142648105">"关闭快捷设置。"</string>
+    <string name="battery_max_title">电池已充满</string>
     <string name="accessibility_quick_settings_alarm_set" msgid="1863000242431528676">"已设置闹钟。"</string>
     <string name="accessibility_quick_settings_user" msgid="1567445362870421770">"目前登录的用户名为<xliff:g id="ID_1">%s</xliff:g>"</string>
     <string name="accessibility_quick_settings_no_internet" msgid="31890692343084075">"未连接到互联网。"</string>
diff --git a/base/packages/SystemUI/res/values-zh-rTW/strings.xml b/base/packages/SystemUI/res/values-zh-rTW/strings.xml
index 7f03c5d..2c33515 100644
--- a/base/packages/SystemUI/res/values-zh-rTW/strings.xml
+++ b/base/packages/SystemUI/res/values-zh-rTW/strings.xml
@@ -21,6 +21,7 @@
     xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="app_label" msgid="7164937344850004466">"系統 UI"</string>
     <string name="status_bar_clear_all_button" msgid="7774721344716731603">"清除"</string>
+    <string name="battery_max_title">電池已充滿</string>
     <string name="status_bar_recent_remove_item_title" msgid="6026395868129852968">"從清單中移除"</string>
     <string name="status_bar_recent_inspect_item_title" msgid="7793624864528818569">"應用程式資訊"</string>
     <string name="status_bar_no_recent_apps" msgid="7374907845131203189">"您最近的螢幕會顯示在這裡"</string>
diff --git a/base/packages/SystemUI/res/values/ids.xml b/base/packages/SystemUI/res/values/ids.xml
index 94d79f2..18054f1 100644
--- a/base/packages/SystemUI/res/values/ids.xml
+++ b/base/packages/SystemUI/res/values/ids.xml
@@ -41,6 +41,7 @@
     <item type="id" name="scrim_alpha_start"/>
     <item type="id" name="scrim_alpha_end"/>
     <item type="id" name="notification_power"/>
+    <item type="id" name="notification_power_max"/>
     <item type="id" name="notification_screenshot"/>
     <item type="id" name="notification_hidden"/>
     <item type="id" name="notification_volumeui"/>
diff --git a/base/packages/SystemUI/res/values/strings.xml b/base/packages/SystemUI/res/values/strings.xml
index f7a169c..0613d41 100644
--- a/base/packages/SystemUI/res/values/strings.xml
+++ b/base/packages/SystemUI/res/values/strings.xml
@@ -60,7 +60,7 @@
 
     <!-- When the battery is low, this is displayed to the user in a dialog.  The title of the low battery alert.  [CHAR LIMIT=NONE]-->
     <string name="battery_low_title">Battery is low</string>
-
+    <string name="battery_max_title">Battery is max</string>
     <!-- A message that appears when the battery level is getting low in a dialog.  This is
         appened to the subtitle of the low battery alert.  "percentage" is the percentage of battery
         remaining [CHAR LIMIT=none]-->
diff --git a/base/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java b/base/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java
index b831235..3c1d1b0 100644
--- a/base/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java
+++ b/base/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java
@@ -24,6 +24,8 @@ import android.content.ContentResolver;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.DialogInterface.OnClickListener;
+import android.support.v7.app.NotificationCompat;
+import android.os.BatteryManager;
 import android.content.DialogInterface.OnDismissListener;
 import android.content.Intent;
 import android.content.IntentFilter;
@@ -32,10 +34,13 @@ import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Handler;
 import android.os.PowerManager;
+import java.io.IOException;
 import android.os.SystemClock;
+import android.media.MediaPlayer;
 import android.os.UserHandle;
 import android.provider.Settings;
 import android.util.Slog;
+import android.util.Log;
 
 import com.android.systemui.R;
 import com.android.systemui.SystemUI;
@@ -45,12 +50,13 @@ import com.android.systemui.statusbar.phone.SystemUIDialog;
 import java.io.PrintWriter;
 import java.text.NumberFormat;
 
-public class PowerNotificationWarnings implements PowerUI.WarningsUI {
+public class PowerNotificationWarnings implements PowerUI.WarningsUI, MediaPlayer.OnCompletionListener {
     private static final String TAG = PowerUI.TAG + ".Notification";
     private static final boolean DEBUG = PowerUI.DEBUG;
 
     private static final String TAG_NOTIFICATION = "low_battery";
-
+    private boolean nbNum = false;
+    private MediaPlayer mMediaPlayer = null;
     private static final int SHOWING_NOTHING = 0;
     private static final int SHOWING_WARNING = 1;
     private static final int SHOWING_INVALID_CHARGER = 3;
@@ -117,6 +123,47 @@ public class PowerNotificationWarnings implements PowerUI.WarningsUI {
         mScreenOffTime = screenOffTime;
     }
 
+    private void  MaxBattery(Intent intent,boolean flag) {
+        int current = intent.getExtras().getInt("level");
+        int total = intent.getExtras().getInt("scale");
+        int percent = current * 100 / total;
+
+        if (percent == 100 && flag == true) {
+            nbNum = true;
+            final Notification nb = new NotificationCompat.Builder(mContext)
+                .setSmallIcon(R.drawable.ic_power_saver)
+                .setWhen(mBucketDroppedNegativeTimeMs)
+                .setShowWhen(false)
+                .setContentTitle(mContext.getString(R.string.battery_max_title))
+                .setContentText(mContext.getString(R.string.battery_max_title))
+                .setOnlyAlertOnce(true)
+                .setDeleteIntent(pendingBroadcast(ACTION_DISMISSED_WARNING))
+                .setPriority(Notification.PRIORITY_MAX)
+                .setVisibility(Notification.VISIBILITY_PUBLIC)
+                .setColor(mContext.getColor(
+                            com.android.internal.R.color.battery_max_mode_color))
+                .build();
+            nb.sound=Uri.parse("/system/media/audio/ui/12_Connect.ogg");
+            mNoMan.notify(R.id.notification_power, nb);
+        } else if (flag == false) {
+            mNoMan.cancel(R.id.notification_power);
+            nbNum = false;
+        }
+    }
+
+    private void BatteryChanged() {
+        mMediaPlayer = new MediaPlayer();
+        mMediaPlayer.reset();
+        try {
+            mMediaPlayer.setDataSource("/system/media/audio/ui/12_Connect.ogg");
+            mMediaPlayer.prepare();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        mMediaPlayer.start();
+        mMediaPlayer.setLooping(false);
+    }
+
     private void updateNotification() {
         if (DEBUG) Slog.d(TAG, "updateNotification mWarning=" + mWarning + " mPlaySound="
                 + mPlaySound + " mInvalidCharger=" + mInvalidCharger);
@@ -315,6 +362,8 @@ public class PowerNotificationWarnings implements PowerUI.WarningsUI {
             filter.addAction(ACTION_SHOW_BATTERY_SETTINGS);
             filter.addAction(ACTION_START_SAVER);
             filter.addAction(ACTION_DISMISSED_WARNING);
+            filter.addAction(Intent.ACTION_POWER_CONNECTED);
+            filter.addAction(Intent.ACTION_BATTERY_CHANGED);
             mContext.registerReceiverAsUser(this, UserHandle.ALL, filter,
                     android.Manifest.permission.STATUS_BAR_SERVICE, mHandler);
         }
@@ -323,6 +372,19 @@ public class PowerNotificationWarnings implements PowerUI.WarningsUI {
         public void onReceive(Context context, Intent intent) {
             final String action = intent.getAction();
             Slog.i(TAG, "Received " + action);
+
+            if (action.equals(Intent.ACTION_POWER_CONNECTED)) {
+                Log.i("rmy", "ACTION_POWER_CONNECTED");
+                BatteryChanged();
+            } else if (action.equals(Intent.ACTION_BATTERY_CHANGED)) {
+                int status = intent.getIntExtra(BatteryManager.EXTRA_STATUS, -1);
+                boolean isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING || status == BatteryManager.BATTERY_STATUS_FULL;
+                if(isCharging){
+                    MaxBattery(intent,true);
+                }else{
+                    MaxBattery(intent,false);
+                }
+            }
             if (action.equals(ACTION_SHOW_BATTERY_SETTINGS)) {
                 dismissLowBatteryNotification();
                 mContext.startActivityAsUser(mOpenBatterySettings, UserHandle.CURRENT);
@@ -335,6 +397,11 @@ public class PowerNotificationWarnings implements PowerUI.WarningsUI {
         }
     }
 
+    @Override
+    public void onCompletion(MediaPlayer mp) {
+        mMediaPlayer.stop();
+    }
+
     private final OnClickListener mStartSaverMode = new OnClickListener() {
         @Override
         public void onClick(DialogInterface dialog, int which) {
