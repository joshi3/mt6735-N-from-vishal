diff --git a/drivers/misc/mediatek/include/mt-plat/charging.h b/drivers/misc/mediatek/include/mt-plat/charging.h
index e55dab0..f207159 100644
--- a/drivers/misc/mediatek/include/mt-plat/charging.h
+++ b/drivers/misc/mediatek/include/mt-plat/charging.h
@@ -596,12 +596,14 @@ typedef enum {
 /* ============================================================ */
 extern int Enable_BATDRV_LOG;
 extern kal_bool chargin_hw_init_done;
+extern kal_bool charger_flag;
 extern unsigned int g_bcct_flag;
 
 /* ============================================================ */
 /* External function */
 /* ============================================================ */
-extern signed int chr_control_interface(CHARGING_CTRL_CMD cmd, void *data);
+extern signed int bq24158_chr_control_interface(CHARGING_CTRL_CMD cmd, void *data);
+extern signed int ncp1854_chr_control_interface(CHARGING_CTRL_CMD cmd, void *data);
 extern unsigned int upmu_get_reg_value(unsigned int reg);
 extern void Charger_Detect_Init(void);
 extern void Charger_Detect_Release(void);
diff --git a/drivers/misc/mediatek/power/mt6735/Makefile b/drivers/misc/mediatek/power/mt6735/Makefile
index 1884648..0d79d55 100755
--- a/drivers/misc/mediatek/power/mt6735/Makefile
+++ b/drivers/misc/mediatek/power/mt6735/Makefile
@@ -51,6 +51,7 @@ else
                else
                 ifeq ($(CONFIG_MTK_BQ24158_SUPPORT),y)
                     obj-$(CONFIG_MTK_SMART_BATTERY) += bq24158.o charging_hw_bq24158.o
+                    obj-$(CONFIG_MTK_SMART_BATTERY) += ncp1854.o charging_hw_ncp1854.o
                 else
                     ifeq ($(CONFIG_MTK_FAN5405_SUPPORT),y)
                         obj-$(CONFIG_MTK_SMART_BATTERY) += fan5405.o charging_hw_fan5405.o
diff --git a/drivers/misc/mediatek/power/mt6735/bq24158.c b/drivers/misc/mediatek/power/mt6735/bq24158.c
index b00668e..474cb4d 100755
--- a/drivers/misc/mediatek/power/mt6735/bq24158.c
+++ b/drivers/misc/mediatek/power/mt6735/bq24158.c
@@ -25,10 +25,11 @@
   *********************************************************/
 #define bq24158_SLAVE_ADDR_WRITE   0xD4
 #define bq24158_SLAVE_ADDR_Read    0xD5
-
+kal_bool chargin_hw_init_done = KAL_FALSE;
+kal_bool charger_flag = 0;
 static struct i2c_client *new_client = NULL;
 static const struct i2c_device_id bq24158_i2c_id[] = {{"bq24158",0},{}};   
-kal_bool chargin_hw_init_done = KAL_FALSE; 
+//kal_bool bq24158_chargin_hw_init_done = KAL_FALSE; 
 static int bq24158_driver_probe(struct i2c_client *client, const struct i2c_device_id *id);
 #ifdef CONFIG_OF
 static const struct of_device_id bq24158_of_match[] = { 
@@ -588,6 +589,7 @@ static int bq24158_driver_probe(struct i2c_client *client, const struct i2c_devi
 {             
     int err=0; 
 
+	int vender_code;
     battery_xlog_printk(BAT_LOG_CRTI,"[bq24158_driver_probe] \n");
 
     if (!(new_client = kmalloc(sizeof(struct i2c_client), GFP_KERNEL))) {
@@ -598,6 +600,14 @@ static int bq24158_driver_probe(struct i2c_client *client, const struct i2c_devi
 
     new_client = client;    
 
+	vender_code = bq24158_get_vender_code();
+	printk("%s line %d vendor_code %x\n",__func__,__LINE__,vender_code);
+	if(vender_code != 0x02 && vender_code != 0x04)
+	{
+		err = -1;
+	        charger_flag = 1;
+		goto exit;
+	}
     //---------------------
   //  bq24158_hw_init();
 #if defined(HIGH_BATTERY_VOLTAGE_SUPPORT)
@@ -607,7 +617,7 @@ static int bq24158_driver_probe(struct i2c_client *client, const struct i2c_devi
 #endif
     bq24158_dump_register();
     chargin_hw_init_done = KAL_TRUE;
-	
+	charger_flag = 0;
     return 0;
 
 exit:
@@ -670,8 +680,8 @@ static int bq24158_user_space_probe(struct platform_device *dev)
     int ret_device_file = 0;
 
     battery_xlog_printk(BAT_LOG_CRTI,"******** bq24158_user_space_probe!! ********\n" );
-    
-    ret_device_file = device_create_file(&(dev->dev), &dev_attr_bq24158_access);
+    if(charger_flag==0)
+        ret_device_file = device_create_file(&(dev->dev), &dev_attr_bq24158_access);
     
     return 0;
 }
diff --git a/drivers/misc/mediatek/power/mt6735/charging_hw_bq24158.c b/drivers/misc/mediatek/power/mt6735/charging_hw_bq24158.c
index f3aaacd..0ada959 100755
--- a/drivers/misc/mediatek/power/mt6735/charging_hw_bq24158.c
+++ b/drivers/misc/mediatek/power/mt6735/charging_hw_bq24158.c
@@ -75,7 +75,7 @@ int gpio_on_out   = GPIO_OUT_ZERO;
 
 kal_bool charging_type_det_done = KAL_TRUE;
 
-const unsigned int VBAT_CV_VTH[]=
+const unsigned int BQ24158_VBAT_CV_VTH[]=
 {
 	BATTERY_VOLT_03_500000_V,   BATTERY_VOLT_03_520000_V,	BATTERY_VOLT_03_540000_V,   BATTERY_VOLT_03_560000_V,
 	BATTERY_VOLT_03_580000_V,   BATTERY_VOLT_03_600000_V,	BATTERY_VOLT_03_620000_V,   BATTERY_VOLT_03_640000_V,
@@ -92,18 +92,18 @@ const unsigned int VBAT_CV_VTH[]=
 	
 };
 
-const unsigned int CS_VTH[]=
+const unsigned int BQ24158_CS_VTH[]=
 {
 	CHARGE_CURRENT_550_00_MA,   CHARGE_CURRENT_650_00_MA,	CHARGE_CURRENT_750_00_MA, CHARGE_CURRENT_850_00_MA,
 	CHARGE_CURRENT_950_00_MA,   CHARGE_CURRENT_1050_00_MA,	CHARGE_CURRENT_1150_00_MA, CHARGE_CURRENT_1250_00_MA
 }; 
 
- const unsigned int INPUT_CS_VTH[]=
+ const unsigned int INPUT_BQ24158_CS_VTH[]=
  {
 	 CHARGE_CURRENT_100_00_MA,	 CHARGE_CURRENT_500_00_MA,	 CHARGE_CURRENT_800_00_MA, CHARGE_CURRENT_MAX
  }; 
 
- const unsigned int VCDT_HV_VTH[]=
+ const unsigned int BQ24158_VCDT_HV_VTH[]=
  {
 	  BATTERY_VOLT_04_200000_V, BATTERY_VOLT_04_250000_V,	  BATTERY_VOLT_04_300000_V,   BATTERY_VOLT_04_350000_V,
 	  BATTERY_VOLT_04_400000_V, BATTERY_VOLT_04_450000_V,	  BATTERY_VOLT_04_500000_V,   BATTERY_VOLT_04_550000_V,
@@ -135,7 +135,7 @@ static unsigned int charging_set_error_state(void *data);
  extern bool get_usb_current_unlimited(void);
  
  // ============================================================ //
- unsigned int charging_value_to_parameter(const unsigned int *parameter, const unsigned int array_size, const unsigned int val)
+ unsigned int bq24158_charging_value_to_parameter(const unsigned int *parameter, const unsigned int array_size, const unsigned int val)
 {
 	if (val < array_size)
 	{
@@ -149,7 +149,7 @@ static unsigned int charging_set_error_state(void *data);
 }
 
  
- unsigned int charging_parameter_to_value(const unsigned int *parameter, const unsigned int array_size, const unsigned int val)
+ unsigned int bq24158_charging_parameter_to_value(const unsigned int *parameter, const unsigned int array_size, const unsigned int val)
 {
 	unsigned int i;
 
@@ -299,7 +299,7 @@ static void hw_bc11_dump_register(void)
 	unsigned short register_value;
 	//unsigned int cv_value = *(unsigned int *)(data);
 
-	register_value = charging_parameter_to_value(VBAT_CV_VTH, GETARRAYNUM(VBAT_CV_VTH) ,*(unsigned int *)(data));
+	register_value = bq24158_charging_parameter_to_value(BQ24158_VBAT_CV_VTH, GETARRAYNUM(BQ24158_VBAT_CV_VTH) ,*(unsigned int *)(data));
 	bq24158_set_oreg(register_value); 
 
 	return status;
@@ -313,9 +313,9 @@ static void hw_bc11_dump_register(void)
     unsigned char reg_value;
 	
     //Get current level
-    array_size = GETARRAYNUM(CS_VTH);
+    array_size = GETARRAYNUM(BQ24158_CS_VTH);
     bq24158_read_interface(0x1, &reg_value, 0x3, 0x6);	//IINLIM
-    *(unsigned int *)data = charging_value_to_parameter(CS_VTH,array_size,reg_value);
+    *(unsigned int *)data = bq24158_charging_value_to_parameter(BQ24158_CS_VTH,array_size,reg_value);
 	
     return status;
  }  
@@ -337,9 +337,9 @@ static void hw_bc11_dump_register(void)
 	else
 	{
 		bq24158_set_io_level(0);
-		array_size = GETARRAYNUM(CS_VTH);
-		set_chr_current = bmt_find_closest_level(CS_VTH, array_size, current_value);
-		register_value = charging_parameter_to_value(CS_VTH, array_size ,set_chr_current);
+		array_size = GETARRAYNUM(BQ24158_CS_VTH);
+		set_chr_current = bmt_find_closest_level(BQ24158_CS_VTH, array_size, current_value);
+		register_value = bq24158_charging_parameter_to_value(BQ24158_CS_VTH, array_size ,set_chr_current);
 		bq24158_set_iocharge(register_value);
 	}
 	return status;
@@ -359,9 +359,9 @@ static void hw_bc11_dump_register(void)
     }
     else
     {
-    	array_size = GETARRAYNUM(INPUT_CS_VTH);
-    	set_chr_current = bmt_find_closest_level(INPUT_CS_VTH, array_size, *(unsigned int *)data);
-    	register_value = charging_parameter_to_value(INPUT_CS_VTH, array_size ,set_chr_current);	
+    	array_size = GETARRAYNUM(INPUT_BQ24158_CS_VTH);
+    	set_chr_current = bmt_find_closest_level(INPUT_BQ24158_CS_VTH, array_size, *(unsigned int *)data);
+    	register_value = bq24158_charging_parameter_to_value(INPUT_BQ24158_CS_VTH, array_size ,set_chr_current);	
     }
     
     bq24158_set_input_charging_current(register_value);
@@ -405,9 +405,9 @@ static void hw_bc11_dump_register(void)
 	 unsigned short register_value;
 	 unsigned int voltage = *(unsigned int*)(data);
 	 
-	 array_size = GETARRAYNUM(VCDT_HV_VTH);
-	 set_hv_voltage = bmt_find_closest_level(VCDT_HV_VTH, array_size, voltage);
-	 register_value = charging_parameter_to_value(VCDT_HV_VTH, array_size ,set_hv_voltage);
+	 array_size = GETARRAYNUM(BQ24158_VCDT_HV_VTH);
+	 set_hv_voltage = bmt_find_closest_level(BQ24158_VCDT_HV_VTH, array_size, voltage);
+	 register_value = bq24158_charging_parameter_to_value(BQ24158_VCDT_HV_VTH, array_size ,set_hv_voltage);
      pmic_set_register_value(PMIC_RG_VCDT_HV_VTH,register_value);
  
 	 return status;
@@ -577,7 +577,7 @@ static unsigned int(*charging_func[CHARGING_CMD_NUMBER]) (void *data);
  * GLOBALS AFFECTED
  *	   None
  */
-signed int chr_control_interface(CHARGING_CTRL_CMD cmd, void *data)
+signed int bq24158_chr_control_interface(CHARGING_CTRL_CMD cmd, void *data)
 {
     static signed int init = -1;
 
diff --git a/drivers/misc/mediatek/power/mt6735/charging_hw_ncp1854.c b/drivers/misc/mediatek/power/mt6735/charging_hw_ncp1854.c
index 3217b99..7f7a9b4 100644
--- a/drivers/misc/mediatek/power/mt6735/charging_hw_ncp1854.c
+++ b/drivers/misc/mediatek/power/mt6735/charging_hw_ncp1854.c
@@ -47,7 +47,7 @@ unsigned int wireless_charger_gpio_number = 0;
 #endif
 
 /* As 82 platform mach/charging.h could not cover all voltage setting, just hardcoded below settings */
-const unsigned int VBAT_CV_VTH[] = {
+const unsigned int NCP1854_VBAT_CV_VTH[] = {
 	3300000, 3325000, 3350000, 3375000,
 	3400000, 3425000, 3450000, 3475000,
 	3500000, 3525000, 3550000, 3575000,
@@ -64,18 +64,18 @@ const unsigned int VBAT_CV_VTH[] = {
 
 /* hardcoded current define which defined in NCP1854 IC spec, as common define doesnot cover all define
  * double confirmed with onsemi register set in spec has issue,below is the correct setting */
-const unsigned int CS_VTH[] = {
+const unsigned int NCP1854_CS_VTH[] = {
 	45000, 50000, 60000, 70000,
 	80000, 90000, 100000, 110000,
 	120000, 130000, 140000, 150000,
 	160000, 170000, 180000, 190000
 };
 
-const unsigned int INPUT_CS_VTH[] = {
+const unsigned int INPUT_NCP1854_CS_VTH[] = {
 	CHARGE_CURRENT_100_00_MA, CHARGE_CURRENT_500_00_MA
 };
 
-const unsigned int INPUT_CS_VTH_TA[] = {
+const unsigned int INPUT_NCP1854_CS_VTH_TA[] = {
 	CHARGE_CURRENT_600_00_MA, CHARGE_CURRENT_700_00_MA, CHARGE_CURRENT_800_00_MA,
 	CHARGE_CURRENT_900_00_MA, CHARGE_CURRENT_1000_00_MA, CHARGE_CURRENT_1100_00_MA,
 	CHARGE_CURRENT_1200_00_MA, CHARGE_CURRENT_1300_00_MA, CHARGE_CURRENT_1400_00_MA,
@@ -83,7 +83,7 @@ const unsigned int INPUT_CS_VTH_TA[] = {
 	180000, 190000, 200000
 };
 
-const unsigned int VCDT_HV_VTH[] = {
+const unsigned int NCP1854_VCDT_HV_VTH[] = {
 	BATTERY_VOLT_04_200000_V, BATTERY_VOLT_04_250000_V, BATTERY_VOLT_04_300000_V,
 	    BATTERY_VOLT_04_350000_V,
 	BATTERY_VOLT_04_400000_V, BATTERY_VOLT_04_450000_V, BATTERY_VOLT_04_500000_V,
@@ -108,7 +108,7 @@ const unsigned int VCDT_HV_VTH[] = {
 unsigned int current_high_flag = 0;
 
  /* ============================================================ // */
-unsigned int charging_value_to_parameter(const unsigned int *parameter, const unsigned int array_size,
+unsigned int ncp1854_charging_value_to_parameter(const unsigned int *parameter, const unsigned int array_size,
 				       const unsigned int val)
 {
 	unsigned int temp_param;
@@ -122,7 +122,7 @@ unsigned int charging_value_to_parameter(const unsigned int *parameter, const un
 	return temp_param;
 }
 
-unsigned int charging_parameter_to_value(const unsigned int *parameter, const unsigned int array_size,
+unsigned int ncp1854_charging_parameter_to_value(const unsigned int *parameter, const unsigned int array_size,
 				       const unsigned int val)
 {
 	unsigned int i;
@@ -214,7 +214,6 @@ static unsigned int charging_dump_register(void *data)
 	pr_notice("charging_dump_register\r\n");
 
 	ncp1854_dump_register();
-
 	return status;
 }
 
@@ -256,11 +255,11 @@ static unsigned int charging_set_cv_voltage(void *data)
 		cv_value = BATTERY_VOLT_04_350000_V;
 
 	/* use nearest value */
-	array_size = GETARRAYNUM(VBAT_CV_VTH);
-	set_chr_cv = bmt_find_closest_level(VBAT_CV_VTH, array_size, cv_value);
+	array_size = GETARRAYNUM(NCP1854_VBAT_CV_VTH);
+	set_chr_cv = bmt_find_closest_level(NCP1854_VBAT_CV_VTH, array_size, cv_value);
 
 	register_value =
-	    charging_parameter_to_value(VBAT_CV_VTH, GETARRAYNUM(VBAT_CV_VTH), set_chr_cv);
+	    ncp1854_charging_parameter_to_value(NCP1854_VBAT_CV_VTH, GETARRAYNUM(NCP1854_VBAT_CV_VTH), set_chr_cv);
 
 	ncp1854_set_ctrl_vbat(register_value);
 
@@ -280,13 +279,13 @@ static unsigned int charging_get_current(void *data)
 	/* Parsing */
 	/* ret_val = (ret_val*100) + 400; */
 
-	array_size = GETARRAYNUM(CS_VTH);
+	array_size = GETARRAYNUM(NCP1854_CS_VTH);
 	ret_val = ncp1854_get_ichg();	/* IINLIM */
 	if (current_high_flag == 1)
 		*(unsigned int *) data =
-		    charging_value_to_parameter(CS_VTH, array_size, ret_val) + 160000;
+		    ncp1854_charging_value_to_parameter(NCP1854_CS_VTH, array_size, ret_val) + 160000;
 	else
-		*(unsigned int *) data = charging_value_to_parameter(CS_VTH, array_size, ret_val);
+		*(unsigned int *) data = ncp1854_charging_value_to_parameter(NCP1854_CS_VTH, array_size, ret_val);
 
 	return status;
 }
@@ -299,15 +298,15 @@ static unsigned int charging_set_current(void *data)
 	unsigned int register_value;
 	unsigned int current_value = *(unsigned int *) data;
 
-	array_size = GETARRAYNUM(CS_VTH);
+	array_size = GETARRAYNUM(NCP1854_CS_VTH);
 	if (current_value <= 190000) {
-		set_chr_current = bmt_find_closest_level(CS_VTH, array_size, current_value);
-		register_value = charging_parameter_to_value(CS_VTH, array_size, set_chr_current);
+		set_chr_current = bmt_find_closest_level(NCP1854_CS_VTH, array_size, current_value);
+		register_value = ncp1854_charging_parameter_to_value(NCP1854_CS_VTH, array_size, set_chr_current);
 		current_high_flag = 0x0;
 	} else {
 		set_chr_current =
-		    bmt_find_closest_level(CS_VTH, array_size, current_value - 160000);
-		register_value = charging_parameter_to_value(CS_VTH, array_size, set_chr_current);
+		    bmt_find_closest_level(NCP1854_CS_VTH, array_size, current_value - 160000);
+		register_value = ncp1854_charging_parameter_to_value(NCP1854_CS_VTH, array_size, set_chr_current);
 		current_high_flag = 0x1;
 	}
 
@@ -329,18 +328,18 @@ static unsigned int charging_set_input_current(void *data)
 	unsigned int current_value = *(unsigned int *) data;
 
 	if (current_value < 60000) {
-		array_size = GETARRAYNUM(INPUT_CS_VTH);
-		set_chr_current = bmt_find_closest_level(INPUT_CS_VTH, array_size, current_value);
+		array_size = GETARRAYNUM(INPUT_NCP1854_CS_VTH);
+		set_chr_current = bmt_find_closest_level(INPUT_NCP1854_CS_VTH, array_size, current_value);
 		register_value =
-		    charging_parameter_to_value(INPUT_CS_VTH, array_size, set_chr_current);
+		    ncp1854_charging_parameter_to_value(INPUT_NCP1854_CS_VTH, array_size, set_chr_current);
 		ncp1854_set_iinlim(register_value);
 		ncp1854_set_iinlim_ta(0x0);
 	} else {
-		array_size = GETARRAYNUM(INPUT_CS_VTH_TA);
+		array_size = GETARRAYNUM(INPUT_NCP1854_CS_VTH_TA);
 		set_chr_current =
-		    bmt_find_closest_level(INPUT_CS_VTH_TA, array_size, current_value);
+		    bmt_find_closest_level(INPUT_NCP1854_CS_VTH_TA, array_size, current_value);
 		register_value =
-		    charging_parameter_to_value(INPUT_CS_VTH_TA, array_size, set_chr_current);
+		    ncp1854_charging_parameter_to_value(INPUT_NCP1854_CS_VTH_TA, array_size, set_chr_current);
 		ncp1854_set_iinlim_ta(register_value);
 	}
 
@@ -386,9 +385,9 @@ static unsigned int charging_set_hv_threshold(void *data)
 	unsigned short register_value;
 	unsigned int voltage = *(unsigned int *) (data);
 
-	array_size = GETARRAYNUM(VCDT_HV_VTH);
-	set_hv_voltage = bmt_find_closest_level(VCDT_HV_VTH, array_size, voltage);
-	register_value = charging_parameter_to_value(VCDT_HV_VTH, array_size, set_hv_voltage);
+	array_size = GETARRAYNUM(NCP1854_VCDT_HV_VTH);
+	set_hv_voltage = bmt_find_closest_level(NCP1854_VCDT_HV_VTH, array_size, voltage);
+	register_value = ncp1854_charging_parameter_to_value(NCP1854_VCDT_HV_VTH, array_size, set_hv_voltage);
 	pmic_set_register_value(PMIC_RG_VCDT_HV_VTH, register_value);
 	return status;
 }
@@ -670,7 +669,7 @@ static unsigned int(*charging_func[CHARGING_CMD_NUMBER]) (void *data);
 * GLOBALS AFFECTED
 *	   None
 */
-signed int chr_control_interface(CHARGING_CTRL_CMD cmd, void *data)
+signed int ncp1854_chr_control_interface(CHARGING_CTRL_CMD cmd, void *data)
 {
 	static signed int init = -1;
 
diff --git a/drivers/misc/mediatek/power/mt6735/ncp1854.c b/drivers/misc/mediatek/power/mt6735/ncp1854.c
index 98bb3a7..0d3b5b6 100755
--- a/drivers/misc/mediatek/power/mt6735/ncp1854.c
+++ b/drivers/misc/mediatek/power/mt6735/ncp1854.c
@@ -36,12 +36,11 @@
 static struct i2c_client *new_client;
 static const struct i2c_device_id ncp1854_i2c_id[] = { {"ncp1854", 0}, {} };
 
-kal_bool chargin_hw_init_done = KAL_FALSE;
 static int ncp1854_driver_probe(struct i2c_client *client, const struct i2c_device_id *id);
 
 #ifdef CONFIG_OF
 static const struct of_device_id ncp1854_of_match[] = {
-            {.compatible = "mediatek,swithing_charger",},
+            {.compatible = "mediatek,swithing_charger1",},
 	{},
 };
 
@@ -611,7 +610,6 @@ static void ncp1854_parse_customer_setting(void)
 static int ncp1854_driver_probe(struct i2c_client *client, const struct i2c_device_id *id)
 {
 	int err = 0;
-
 	battery_log(BAT_LOG_CRTI, "[ncp1854_driver_probe]\n");
 
 	new_client = kmalloc(sizeof(struct i2c_client), GFP_KERNEL);
@@ -623,7 +621,10 @@ static int ncp1854_driver_probe(struct i2c_client *client, const struct i2c_devi
 	memset(new_client, 0, sizeof(struct i2c_client));
 
 	new_client = client;
-
+        if(charger_flag==0)
+        {
+            goto exit;
+        }
 	chargin_hw_init_done = KAL_TRUE;
 
 	ncp1854_parse_customer_setting();
diff --git a/drivers/misc/mediatek/usb20/mt6735/usb20.h b/drivers/misc/mediatek/usb20/mt6735/usb20.h
index 86006db..5828cbd 100755
--- a/drivers/misc/mediatek/usb20/mt6735/usb20.h
+++ b/drivers/misc/mediatek/usb20/mt6735/usb20.h
@@ -59,7 +59,6 @@ typedef enum {
 	NONSTANDARD_CHARGER,	/* AC : 450mA~1A */
 	STANDARD_CHARGER,	/* AC : ~1A */
 } CHARGER_TYPE;
-
 extern int first_connect;
 extern int check_delay_done;
 extern void wake_up_bat(void);
@@ -113,6 +112,10 @@ extern void bq24158_set_opa_mode(kal_uint32 val);
 extern void bq24158_set_otg_pl(kal_uint32 val);
 extern void bq24158_set_otg_en(kal_uint32 val);
 extern kal_uint32 bq24158_config_interface_liao (kal_uint8 RegNum, kal_uint8 val);
+
+extern void ncp1854_set_chg_en(unsigned int val);
+extern void ncp1854_set_otg_en(unsigned int val);
+
 // End of Vanzo: zhangqingzhan
 #elif defined(CONFIG_MTK_BQ24261_SUPPORT)
 extern void bq24261_set_en_boost(unsigned int val);
diff --git a/drivers/misc/mediatek/usb20/mt6735/usb20_host.c b/drivers/misc/mediatek/usb20/mt6735/usb20_host.c
index 3712835..77f146c 100755
--- a/drivers/misc/mediatek/usb20/mt6735/usb20_host.c
+++ b/drivers/misc/mediatek/usb20/mt6735/usb20_host.c
@@ -108,9 +108,18 @@ void mt_usb_set_vbus(struct musb *musb, int is_on)
  *add bq24158
  */
     #elif defined(CONFIG_MTK_BQ24158_SUPPORT)
-        bq24158_set_opa_mode(1);
-        bq24158_set_otg_pl(1);
-        bq24158_set_otg_en(1);
+                //if(charger_flag==0)
+                {
+                    bq24158_set_opa_mode(1);
+                    bq24158_set_otg_pl(1);
+                    bq24158_set_otg_en(1);
+                }
+                //else
+                {
+                    ncp1854_set_otg_en(0);
+                    ncp1854_set_chg_en(0);
+                    ncp1854_set_otg_en(1);
+                }
 // End of Vanzo: zhangqingzhan
 	#elif defined(CONFIG_MTK_NCP1854_SUPPORT)
 		ncp1854_set_otg_en(0);
@@ -145,8 +154,15 @@ void mt_usb_set_vbus(struct musb *musb, int is_on)
  *add for bq24158
  */
     #elif defined(CONFIG_MTK_BQ24158_SUPPORT)
-        bq24158_config_interface_liao(0x01,0x30);
-        bq24158_config_interface_liao(0x02,0x8e);
+                //if(charger_flag==0)
+                {
+                    bq24158_config_interface_liao(0x01,0x30);
+                    bq24158_config_interface_liao(0x02,0x8e);
+                }
+                //else
+                {
+                    ncp1854_set_otg_en(0x0);
+                }
 // End of Vanzo: zhangqingzhan
 	#elif defined(CONFIG_MTK_NCP1854_SUPPORT)
 		ncp1854_set_otg_en(0x0);
diff --git a/drivers/power/mediatek/battery_common.c b/drivers/power/mediatek/battery_common.c
index c5b849d..dbf9c2e 100644
--- a/drivers/power/mediatek/battery_common.c
+++ b/drivers/power/mediatek/battery_common.c
@@ -400,8 +400,12 @@ kal_bool upmu_is_chr_det(void)
 #endif
 
 	if (battery_charging_control == NULL)
-		battery_charging_control = chr_control_interface;
-
+        {
+            if(!charger_flag)
+		battery_charging_control = bq24158_chr_control_interface;
+            else
+		battery_charging_control = ncp1854_chr_control_interface;
+        }
 #if defined(CONFIG_POWER_EXT)
 	/* return KAL_TRUE; */
 	return get_charger_detect_status();
@@ -3800,7 +3804,10 @@ void battery_kthread_hrtimer_init(void)
 
 static void get_charging_control(void)
 {
-	battery_charging_control = chr_control_interface;
+    if(!charger_flag)
+	battery_charging_control = bq24158_chr_control_interface;
+    else
+	battery_charging_control = ncp1854_chr_control_interface;
 }
 
 #if defined(CONFIG_MTK_DUAL_INPUT_CHARGER_SUPPORT)
