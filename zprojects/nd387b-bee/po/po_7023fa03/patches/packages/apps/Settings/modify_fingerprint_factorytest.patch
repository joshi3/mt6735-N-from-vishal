diff --git a/src/com/android/settings/fingerprint/FingerprintEnrollEnrolling.java b/src/com/android/settings/fingerprint/FingerprintEnrollEnrolling.java
index 8bc48a1..517be19 100644
--- a/src/com/android/settings/fingerprint/FingerprintEnrollEnrolling.java
+++ b/src/com/android/settings/fingerprint/FingerprintEnrollEnrolling.java
@@ -32,6 +32,7 @@ import android.graphics.drawable.AnimatedVectorDrawable;
 import android.graphics.drawable.Drawable;
 import android.hardware.fingerprint.FingerprintManager;
 import android.os.Bundle;
+import android.os.Handler;
 import android.os.UserHandle;
 import android.view.MotionEvent;
 import android.view.View;
@@ -102,6 +103,9 @@ public class FingerprintEnrollEnrolling extends FingerprintEnrollBase
  * modify AndroidM common fingerprint test
  */
     private String mFactoryMode = null;
+    private static int num_enrolled;
+    private final int enroll_time = 2;
+    private Intent intentInput;
 // End of Vanzo:zhangweipeng
 
 /* Vanzo:zhangweipeng on: Tue, 10 May 2016 14:47:18 +0800
@@ -123,6 +127,18 @@ public class FingerprintEnrollEnrolling extends FingerprintEnrollBase
     };
 // End of Vanzo:zhangweipeng
 
+    Handler handler = new Handler();
+    Runnable runnable = new Runnable() {
+        public void run() {
+            num_enrolled = 0;
+            android.util.Log.d("zhangwp","mFactoryMode have not enroll in 20s, finish enroll now");
+            intentInput.putExtra("result", "FALSE");
+            FingerprintEnrollEnrolling.this.setResult(0, intentInput);
+            finish();
+            return;
+        }
+    };
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -135,8 +151,8 @@ public class FingerprintEnrollEnrolling extends FingerprintEnrollBase
 /* Vanzo:zhangweipeng on: Thu, 12 May 2016 22:37:09 +0800
   * modify AndroidM common fingerprint test
  */
-        Intent intent = getIntent();
-        mFactoryMode = intent.getStringExtra("flag");
+        intentInput = getIntent();
+        mFactoryMode = intentInput.getStringExtra("flag");
 // End of Vanzo:zhangweipeng
         setContentView(R.layout.fingerprint_enroll_enrolling);
         setHeaderText(R.string.security_settings_fingerprint_enroll_start_title);
@@ -176,6 +192,7 @@ public class FingerprintEnrollEnrolling extends FingerprintEnrollBase
         mIndicatorBackgroundActivatedColor
                 = getColor(R.color.fingerprint_indicator_background_activated);
         mRestoring = savedInstanceState != null;
+//        handler.postDelayed(runnable, 20000);
     }
 
 /* Vanzo:zhangweipeng on: Tue, 10 May 2016 14:47:55 +0800
@@ -311,6 +328,8 @@ public class FingerprintEnrollEnrolling extends FingerprintEnrollBase
         if("factory".equals(mFactoryMode)) {
             android.util.Log.d("zhangwp","mFactoryMode do not show FingerprintEnrollFinish");
             mFactoryMode = null;
+//            if (handler.hasCallbacks(runnable))
+//                handler.removeCallbacks(runnable);
             finish();
             return;
         }
@@ -369,12 +388,20 @@ public class FingerprintEnrollEnrolling extends FingerprintEnrollBase
 
     @Override
     public void onEnrollmentProgressChange(int steps, int remaining) {
+//        handler.removeCallbacks(runnable);
+//        handler.postDelayed(runnable, 20000);
         updateProgress(true /* animate */);
         updateDescription();
         clearError();
         animateFlash();
         mErrorText.removeCallbacks(mTouchAgainRunnable);
         mErrorText.postDelayed(mTouchAgainRunnable, HINT_TIMEOUT_DURATION);
+        if("factory".equals(mFactoryMode)) {
+            intentInput.putExtra("result", "PASS");
+            FingerprintEnrollEnrolling.this.setResult(1, intentInput);
+            finish();
+            return;
+        }
     }
 
     private void updateProgress(boolean animate) {
@@ -392,6 +419,9 @@ public class FingerprintEnrollEnrolling extends FingerprintEnrollBase
             return 0;
         }
         int progress = Math.max(0, steps + 1 - remaining);
+        if("factory".equals(mFactoryMode)) {
+            progress = PROGRESS_BAR_MAX;
+        }
         return PROGRESS_BAR_MAX * progress / (steps + 1);
     }
 
