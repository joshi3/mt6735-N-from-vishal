diff --git a/base/packages/Keyguard/src/com/android/keyguard/CarrierText.java b/base/packages/Keyguard/src/com/android/keyguard/CarrierText.java
index 2544264..04e800f 100644
--- a/base/packages/Keyguard/src/com/android/keyguard/CarrierText.java
+++ b/base/packages/Keyguard/src/com/android/keyguard/CarrierText.java
@@ -45,6 +45,12 @@ import com.mediatek.keyguard.ext.ICarrierTextExt;
 import com.mediatek.keyguard.ext.IOperatorSIMString;
 import com.mediatek.keyguard.ext.IOperatorSIMString.SIMChangedTag;
 import com.mediatek.keyguard.Plugin.KeyguardPluginFactory;
+/* Vanzo:zhangweigang on: Thu, 24 Aug 2017 17:32:59 +0800
+ * TODO: add operator name
+ */
+import android.provider.Settings;
+import android.os.Handler;
+// End of Vanzo:zhangweigang
 
 public class CarrierText extends TextView {
     private static final boolean DEBUG = KeyguardConstants.DEBUG;
@@ -57,6 +63,12 @@ public class CarrierText extends TextView {
     private KeyguardUpdateMonitor mKeyguardUpdateMonitor;
 
     private WifiManager mWifiManager;
+/* Vanzo:zhangweigang on: Thu, 24 Aug 2017 17:34:08 +0800
+ * TODO: replace this line with your comment
+ */
+    private static final String ACTION_OPERATOR_NAME = "revo_change_operator_name";
+    private Handler revoHandler;
+// End of Vanzo:zhangweigang
 
     ///M: added for multi-sim project
     private Context mContext ;
@@ -134,6 +146,7 @@ public class CarrierText extends TextView {
         for (int i = 0; i < mNumOfPhone ; i++) {
             mStatusMode[i] = StatusMode.Normal;
         }
+        revoHandler = new Handler();
     }
 
     public CarrierText(Context context) {
@@ -311,7 +324,8 @@ public class CarrierText extends TextView {
         }
         // find all need-to-show carrier text, combine, and set text.
         String carrierFinalContent = null;
-        String divider = mCarrierTextExt.customizeCarrierTextDivider(mSeparator.toString());
+      //  String divider = mCarrierTextExt.customizeCarrierTextDivider(mSeparator.toString());
+        String divider = mCarrierTextExt.customizeCarrierTextDivider(CARRIER_DIVIDER.toString());
         for (int i = 0 ; i < mNumOfPhone ; i++) {
             ///M: fix ALPS01963660, do not show "null" string.
             if (mCarrierNeedToShow[i] && (mCarrier[i] != null)) {
@@ -335,6 +349,23 @@ public class CarrierText extends TextView {
         Log.d(TAG, "updateCarrierText() - after combination, carrierFinalContent = " +
                    carrierFinalContent) ;
 
+/* Vanzo:zhangweigang on: Thu, 24 Aug 2017 17:38:28 +0800
+ * TODO: replace this line with your comment
+ */
+        if (carrierFinalContent != null) {
+            final String operatorLable = carrierFinalContent;
+            Log.i("opera_name","carrier_label setCarrierLabel ="+operatorLable);
+            Settings.System.putString(mContext.getContentResolver(),"revo_opera_name",operatorLable);
+            revoHandler.postDelayed(new Runnable(){
+                            @Override
+                            public void run(){
+                                Intent intent = new Intent(ACTION_OPERATOR_NAME);
+                                intent.putExtra("revo_msg", operatorLable);
+                                mContext.sendBroadcast(intent);
+                            }
+                    },100);
+        }
+// End of Vanzo:zhangweigang
         setText(carrierFinalContent);
     }
 
diff --git a/base/packages/SystemUI/res/layout-sw410dp/status_bar_alarm_group.xml b/base/packages/SystemUI/res/layout-sw410dp/status_bar_alarm_group.xml
index ba5c0aa..4b801c9 100644
--- a/base/packages/SystemUI/res/layout-sw410dp/status_bar_alarm_group.xml
+++ b/base/packages/SystemUI/res/layout-sw410dp/status_bar_alarm_group.xml
@@ -24,6 +24,21 @@
     android:layout_marginStart="16dp"
     android:gravity="start"
     android:orientation="vertical">
+    <TextView
+        android:id="@+id/showcdma"
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:layout_marginLeft="-1dp"
+        android:paddingBottom="3dp"
+        android:textSize="8dp"
+        android:textColor="#ffffff"
+        android:ellipsize="marquee"
+        android:marqueeRepeatLimit="marquee_forever"
+        android:singleLine="true"
+        android:focusable="true"
+        android:focusableInTouchMode="true"
+        android:visibility="gone"
+    />
     <LinearLayout
         android:id="@+id/date_time_group"
         android:layout_width="wrap_content"
diff --git a/base/packages/SystemUI/res/layout/status_bar_alarm_group.xml b/base/packages/SystemUI/res/layout/status_bar_alarm_group.xml
index f94b727..489fef1 100644
--- a/base/packages/SystemUI/res/layout/status_bar_alarm_group.xml
+++ b/base/packages/SystemUI/res/layout/status_bar_alarm_group.xml
@@ -24,6 +24,21 @@
     android:layout_marginStart="16dp"
     android:gravity="start"
     android:orientation="vertical">
+    <TextView
+        android:id="@+id/showcdma"
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:layout_marginLeft="-1dp"
+        android:paddingBottom="5dp"
+        android:textSize="10dp"
+        android:textColor="#ffffff"
+        android:ellipsize="marquee"
+        android:marqueeRepeatLimit="marquee_forever"
+        android:singleLine="true"
+        android:focusable="true"
+        android:focusableInTouchMode="true"
+        android:visibility="gone"
+    />
     <LinearLayout
         android:id="@+id/date_time_group"
         android:layout_width="wrap_content"
diff --git a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickStatusBarHeader.java b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickStatusBarHeader.java
index 01f3185..6bb1ff9 100644
--- a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickStatusBarHeader.java
+++ b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickStatusBarHeader.java
@@ -47,6 +47,14 @@ import com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChange
 import com.android.systemui.statusbar.policy.UserInfoController;
 import com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener;
 import com.android.systemui.tuner.TunerService;
+/* Vanzo:zhangweigang on: Thu, 24 Aug 2017 17:47:39 +0800
+ * TODO: add operator name
+ */
+import android.provider.Settings;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.BroadcastReceiver;
+// End of Vanzo:zhangweigang
 
 public class QuickStatusBarHeader extends BaseStatusBarHeader implements
         NextAlarmChangeCallback, OnClickListener, OnUserInfoChangedListener {
@@ -71,6 +79,13 @@ public class QuickStatusBarHeader extends BaseStatusBarHeader implements
     private ViewGroup mDateTimeGroup;
     private ViewGroup mDateTimeAlarmGroup;
     private TextView mEmergencyOnly;
+/* Vanzo:zhangweigang on: Thu, 24 Aug 2017 17:48:44 +0800
+ * TODO: replace this line with your comment
+ */
+    private static final String ACTION_OPERATOR_NAME = "revo_change_operator_name";
+    private TextView mShowOperaName;
+    private String mName;
+// End of Vanzo:zhangweigang
 
     protected ExpandableIndicator mExpandIndicator;
 
@@ -95,6 +110,26 @@ public class QuickStatusBarHeader extends BaseStatusBarHeader implements
     private float mExpansionAmount;
     private QSTileHost mHost;
     private boolean mShowFullAlarm;
+/* Vanzo:zhangweigang on: Thu, 24 Aug 2017 17:49:16 +0800
+ * TODO: add operator name
+ */
+    private final BroadcastReceiver mOperaReceiver = new BroadcastReceiver() {
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        final String action = intent.getAction();
+        String revoName = intent.getStringExtra("revo_msg");
+        if (ACTION_OPERATOR_NAME.equals(action)) {
+                android.util.Log.i("opera_name", "   ACTION_OPERATOR_NAME " + mExpanded);
+                if(revoName != null && mExpanded) {
+                        android.util.Log.i("opera_name", "  OPERATOR_NAME " + revoName);
+                        if (!revoName.equals(mShowOperaName.getText())) {
+                            mShowOperaName.setText(revoName);
+                        }
+                    }
+            }
+        }
+    };
+// End of Vanzo:zhangweigang
 
     public QuickStatusBarHeader(Context context, AttributeSet attrs) {
         super(context, attrs);
@@ -107,6 +142,14 @@ public class QuickStatusBarHeader extends BaseStatusBarHeader implements
         mEmergencyOnly = (TextView) findViewById(R.id.header_emergency_calls_only);
 
         mDateTimeAlarmGroup = (ViewGroup) findViewById(R.id.date_time_alarm_group);
+/* Vanzo:zhangweigang on: Thu, 24 Aug 2017 17:50:45 +0800
+ * TODO: replace this line with your comment
+ */
+        mShowOperaName = (TextView) findViewById(R.id.showcdma);
+        IntentFilter iFilter = new IntentFilter();
+        iFilter.addAction(ACTION_OPERATOR_NAME);
+        mContext.registerReceiver(mOperaReceiver, iFilter);
+// End of Vanzo:zhangweigang
         mDateTimeAlarmGroup.findViewById(R.id.empty_time_view).setVisibility(View.GONE);
         mDateTimeGroup = (ViewGroup) findViewById(R.id.date_time_group);
         mDateTimeGroup.setPivotX(0);
@@ -265,6 +308,7 @@ public class QuickStatusBarHeader extends BaseStatusBarHeader implements
         setListening(false);
         mHost.getUserInfoController().remListener(this);
         mHost.getNetworkController().removeEmergencyListener(this);
+        mContext.unregisterReceiver(mOperaReceiver);
         super.onDetachedFromWindow();
     }
 
@@ -293,6 +337,7 @@ public class QuickStatusBarHeader extends BaseStatusBarHeader implements
 
     @Override
     public void updateEverything() {
+        mName = Settings.System.getString(mContext.getContentResolver(),"revo_opera_name");
         updateDateTimePosition();
         updateVisibilities();
         setClickable(false);
@@ -302,6 +347,9 @@ public class QuickStatusBarHeader extends BaseStatusBarHeader implements
         updateAlarmVisibilities();
         mEmergencyOnly.setVisibility(mExpanded && mShowEmergencyCallsOnly
                 ? View.VISIBLE : View.INVISIBLE);
+        mShowOperaName.setVisibility(mExpanded  && !mShowEmergencyCallsOnly
+                     ? View.VISIBLE : View.GONE);
+        if (mExpanded && mName != null)  mShowOperaName.setText(mName);
         mSettingsContainer.setVisibility(mExpanded ? View.VISIBLE : View.INVISIBLE);
         mSettingsContainer.findViewById(R.id.tuner_icon).setVisibility(
                 TunerService.isTunerEnabled(mContext) ? View.VISIBLE : View.INVISIBLE);
